# Generated by Django 4.2.6 on 2023-11-28 21:39

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apoiador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=100, verbose_name='Marca')),
                ('contato', models.CharField(help_text='Formato (00) 0000-0000', max_length=20, unique=True, verbose_name='Contato')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Apoio',
                'verbose_name_plural': 'Apoios',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Atividade')),
                ('descricao', models.TextField(blank=True, max_length=200, verbose_name='Descrição')),
                ('link', models.URLField(verbose_name='Link da Atividade')),
            ],
            options={
                'verbose_name': 'Atividade',
                'verbose_name_plural': 'Atividades',
            },
        ),
        migrations.CreateModel(
            name='Publicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(default='Título', max_length=30, verbose_name='Título')),
                ('descricao', models.TextField(max_length=200, verbose_name='Descrição')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='media/', verbose_name='Imagem')),
            ],
            options={
                'verbose_name': 'Publicação',
                'verbose_name_plural': 'Publicações',
            },
        ),
        migrations.CreateModel(
            name='Recado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resumo', models.CharField(blank=True, max_length=30, verbose_name='Resumo')),
                ('texto', models.TextField(blank=True, max_length=200, verbose_name='Recado')),
            ],
            options={
                'verbose_name': 'Recado',
                'verbose_name_plural': 'Recados',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.CharField(max_length=50, verbose_name='Ano')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login', models.CharField(max_length=100, verbose_name='Login')),
                ('senha1', models.CharField(max_length=100, verbose_name='Senha')),
                ('senha2', models.CharField(max_length=100, verbose_name='Confirmação da Senha')),
                ('groups', models.ManyToManyField(related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Nome', max_length=100, verbose_name='Nome')),
                ('dataNasc', models.DateField(blank=True, help_text='Formato DD/MM/AAAA', null=True, verbose_name='Data de Nascimento')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('leciona', models.ManyToManyField(to='aplic.turma')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
            },
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Nome', max_length=100, verbose_name='Nome')),
                ('dataNasc', models.DateField(blank=True, help_text='Formato DD/MM/AAAA', null=True, verbose_name='Data de Nascimento')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('matricula', models.IntegerField(default='0000000', unique=True, verbose_name='Matrícula')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplic.turma')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
            },
        ),
    ]
